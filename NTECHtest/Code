1.
import sys
from collections import defaultdict
si = sys.stdin.readline
N = int(si())
cnt = [0 for _ in range(10000005)]
for _ in range(N):
    s, e = map(int, si().split())
    cnt[s] += 1
    cnt[e] -= 1
ans = 0
for i in range(1, 10000001):
    cnt[i] += cnt[i - 1]
    if cnt[i] > 0:
        ans += 1
print(ans)
2.
import sys
from collections import defaultdict
si = sys.stdin.readline
N = int(si())
A = list(map(int, si().split()))
sum, ans = 0, 0
for x in A:
    if x == 0:
        sum = 0
    else:
        sum += 1
    ans = max(ans, sum)
print(ans)
3.
# 3
# 2019/12/01 SUN
# 2020/03/02
# 01/02
# 12/24
# 03/01
# 1
# 2019/12/01 SUN
# 2019/12/31
# 12/25
import sys
from collections import defaultdict
si = sys.stdin.readline
# 입력 + 파싱
#####################################################
N = int(si())
start, day = si().split()
end = si()
holidays = [tuple(map(int, si().split('/'))) for _ in range(N)]
day = {
    'MON': 0,
    'TUE': 1,
    'WED': 2,
    'THU': 3,
    'FRI': 4,
    'SAT': 5,
    'SUN': 6,
}[day]
def parsing_YMD(date, day):
    Y, M ,D = map(int, date.split('/'))
    return (Y, M, D, day)
#####################################################
def is_workday(today):
    Y, M, D, day = today
    if day in [5, 6]:
        return False
    if (M, D) in holidays:
        return False
    return True
def is_leap_year(year):
    if year % 400 == 0:
        return True
    if year % 100 == 0:
        return False
    return year % 4 == 0
days = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
def tomorrow(today):
    Y, M, D, day = today
    last_day = days[M]
    if is_leap_year(Y) and M == 2:
        last_day += 1
    if D == last_day:
        D = 1
        M += 1
    else:
        D += 1
    if M == 13:
        M = 1
        Y += 1
    return (Y, M, D, (day + 1) % 7)
today = parsing_YMD(start, day)
ans = 0
while True:
    if is_workday(today):
        ans += 1
    if today[:3] == parsing_YMD(end, -1)[:3]:
        break
    today = tomorrow(today)
print(ans)
4.
import sys
from collections import defaultdict
si = sys.stdin.readline
N, M, K = map(int, si().split())
MOD = 1000000007
dy = [[[0 for _ in range(M + 1)] for __ in range(M + 1)] for ___ in range(N + 1)]
dy[0][0][0] = 1
for i in range(1, N + 1):
    for s in range(1, M + 1):
        if s > i * K:
            break
        for os in range(1, M + 1):
            if os > s:
                break
            if i % 2 == 1:
                for l in range(1, K + 1):
                    if s < l or os < l:
                        break
                    dy[i][s][os] += dy[i - 1][s - l][os - l]
                    dy[i][s][os] %= MOD
            else:
                for l in range(1, K + 1):
                    if s < l:
                        break
                    dy[i][s][os] += dy[i - 1][s - l][os]
                    dy[i][s][os] %= MOD
print(dy[N][M][M // 2])
